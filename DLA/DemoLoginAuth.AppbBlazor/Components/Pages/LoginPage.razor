@page "/login"
@using NetcodeHub.Packages.Components.Validations.OnInput
@using DemoLoginAuth.Application.DTOs
@using DemoLoginAuth.AppbBlazor.States
@using DemoLoginAuth.Application.Services.Implements


<div class="row">
    <div class="col-lg-5">
        <div class="alert alert-info mb-3">@Message</div>
        <EditForm Model="LoginModel" OnValidSubmit="LoginAsync">
            <DataAnnotationsValidator/>
            <FloatingText  @bind-Value="LoginModel.Email" class="form-control mb-3" Label="Email" Placeholder="Digite seu e-mail" Type="email" />
            <FloatingText @bind-Value="LoginModel.Password"  class="form-control mb-3" Label="Senha" Placeholder="Digite sua senha" Type="password" />
            <button class="btn btn-primary mb-3" type="submit">Login</button>
            <ValidationSummary class="text-danger" />
        </EditForm>
    </div>
</div>



@code {
    string? Message = string.Empty;
    LoginUserDto LoginModel = new();
    async Task LoginAsync()
    {
        Message = null;
        var result = await AccountService.LoginUserAccountAsync(LoginModel);
        if (result.Flag)
        {
            var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthenticationProvider;
            await customAuthStateProvider.UpdateAuthenticationState(result.Token);
            NavManager.NavigateTo("/", forceLoad: true);
        }
        else
        {
            Message = result.Message;
        }
    }
}
